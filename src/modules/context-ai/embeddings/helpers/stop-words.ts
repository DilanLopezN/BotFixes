const stopWordsPtBr = [
    'a',
    'à',
    'adeus',
    'aí',
    'ainda',
    'além',
    'algo',
    'alguém',
    'algum',
    'alguma',
    'algumas',
    'alguns',
    'ali',
    'ante',
    'ao',
    'aos',
    'apenas',
    'após',
    'aquela',
    'aquelas',
    'aquele',
    'aqueles',
    'aquilo',
    'as',
    'às',
    'assim',
    'até',
    'através',
    'breve',
    'cá',
    'cada',
    'catorze',
    'cento',
    'certamente',
    'cinco',
    'com',
    'como',
    'contra',
    'contudo',
    'da',
    'dá',
    'dão',
    'daquela',
    'daquelas',
    'daquele',
    'daqueles',
    'dar',
    'das',
    'de',
    'debaixo',
    'dela',
    'delas',
    'dele',
    'deles',
    'dentro',
    'desde',
    'dessa',
    'dessas',
    'desse',
    'desses',
    'desta',
    'destas',
    'deste',
    'destes',
    'deve',
    'devem',
    'devendo',
    'dever',
    'deverá',
    'deverão',
    'deveria',
    'deveriam',
    'devia',
    'deviam',
    'dez',
    'dezenove',
    'dezesseis',
    'dezessete',
    'dezoito',
    'disse',
    'disso',
    'disto',
    'dito',
    'diz',
    'dizem',
    'dizer',
    'do',
    'dois',
    'dos',
    'doze',
    'duas',
    'e',
    'é',
    'ela',
    'elas',
    'ele',
    'eles',
    'em',
    'embora',
    'enquanto',
    'entre',
    'era',
    'eram',
    'éramos',
    'és',
    'essa',
    'essas',
    'esse',
    'esses',
    'esta',
    'está',
    'estamos',
    'estão',
    'estar',
    'estas',
    'estás',
    'estava',
    'estavam',
    'estávamos',
    'este',
    'esteja',
    'estejam',
    'estejamos',
    'estes',
    'esteve',
    'estive',
    'estivemos',
    'estiver',
    'estivera',
    'estiveram',
    'estivéramos',
    'estiverem',
    'estivermos',
    'estivesse',
    'estivessem',
    'estivéssemos',
    'estiveste',
    'estivestes',
    'estou',
    'etc',
    'eu',
    'faço',
    'faz',
    'fazeis',
    'fazem',
    'fazemos',
    'fazendo',
    'fazer',
    'fazes',
    'feita',
    'feitas',
    'feito',
    'feitos',
    'fez',
    'fim',
    'foi',
    'fomos',
    'for',
    'fora',
    'foram',
    'fôramos',
    'forem',
    'formos',
    'fosse',
    'fossem',
    'fôssemos',
    'foste',
    'fostes',
    'fui',
    'há',
    'haja',
    'hajam',
    'hajamos',
    'hão',
    'havemos',
    'havia',
    'hei',
    'houve',
    'houvemos',
    'houver',
    'houvera',
    'houverá',
    'houveram',
    'houvéramos',
    'houverão',
    'houverei',
    'houverem',
    'houveremos',
    'houveria',
    'houveriam',
    'houveríamos',
    'houvermos',
    'houvesse',
    'houvessem',
    'houvéssemos',
    'isso',
    'isto',
    'la',
    'lá',
    'lhe',
    'lhes',
    'lo',
    'mas',
    'me',
    'mesma',
    'mesmas',
    'mesmo',
    'mesmos',
    'meu',
    'meus',
    'mil',
    'minha',
    'minhas',
    'na',
    'nada',
    'não',
    'naquela',
    'naquelas',
    'naquele',
    'naqueles',
    'nas',
    'nem',
    'nenhum',
    'nenhuma',
    'nessa',
    'nessas',
    'nesse',
    'nesses',
    'nesta',
    'nestas',
    'neste',
    'nestes',
    'ninguém',
    'no',
    'nos',
    'nós',
    'nossa',
    'nossas',
    'nosso',
    'nossos',
    'num',
    'numa',
    'o',
    'obrigada',
    'obrigado',
    'oitava',
    'oitavo',
    'oito',
    'os',
    'ou',
    'outra',
    'outras',
    'outro',
    'outros',
    'para',
    'partir',
    'paucas',
    'pela',
    'pelas',
    'pelo',
    'pelos',
    'per',
    'perante',
    'pode',
    'pude',
    'pôde',
    'podem',
    'podendo',
    'poder',
    'poderia',
    'poderiam',
    'podia',
    'podiam',
    'põe',
    'põem',
    'pois',
    'por',
    'porém',
    'porque',
    'porquê',
    'posso',
    'puderam',
    'quais',
    'quáis',
    'qual',
    'quanto',
    'quantos',
    'quarta',
    'quarto',
    'quatro',
    'que',
    'quê',
    'quem',
    'quer',
    'quereis',
    'querem',
    'queremas',
    'queres',
    'quero',
    'quinta',
    'quinto',
    'quinze',
    'são',
    'se',
    'segunda',
    'segundo',
    'seis',
    'seja',
    'sejam',
    'sejamos',
    'sem',
    'sendo',
    'ser',
    'será',
    'serão',
    'serei',
    'seremos',
    'seria',
    'seriam',
    'seríamos',
    'sete',
    'sétima',
    'sétimo',
    'seu',
    'seus',
    'sexta',
    'sexto',
    'si',
    'sido',
    'sim',
    'só',
    'sob',
    'sobre',
    'sois',
    'somos',
    'sou',
    'sua',
    'suas',
    'tal',
    'também',
    'tampouco',
    'tão',
    'te',
    'tem',
    'tém',
    'têm',
    'temos',
    'tendes',
    'tendo',
    'tenha',
    'tenham',
    'tenhamos',
    'tenho',
    'tens',
    'ter',
    'terá',
    'terão',
    'terceira',
    'terceiro',
    'terei',
    'teremos',
    'teria',
    'teriam',
    'teríamos',
    'teu',
    'teus',
    'teve',
    'ti',
    'tido',
    'tinha',
    'tinham',
    'tínhamos',
    'tive',
    'tivemos',
    'tiver',
    'tivera',
    'tiveram',
    'tivéramos',
    'tiverem',
    'tivermos',
    'tivesse',
    'tivessem',
    'tivéssemos',
    'tiveste',
    'tivestes',
    'toda',
    'todas',
    'todavia',
    'todo',
    'todos',
    'três',
    'treze',
    'tu',
    'tua',
    'tuas',
    'tudo',
    'um',
    'uma',
    'umas',
    'uns',
    'vai',
    'vais',
    'vão',
    'vem',
    'vêm',
    'vendo',
    'vens',
    'ver',
    'vindo',
    'vinte',
    'vir',
    'você',
    'vocês',
    'vos',
    'vós',
    'vossa',
    'vossas',
    'vosso',
    'vossos',
    'zero',
];

export const stopWordsSet = new Set(stopWordsPtBr);

export const normalizeText = (text: string): string => {
    // Etapa 0: Lidar com entradas inválidas (null, undefined, não-string)
    if (!text || typeof text !== 'string') {
        return '';
    }

    // Etapa 1: Converter para minúsculas
    let normalizedText = text.toLowerCase();

    // Etapa 2: Remover acentos (diacríticos) de forma eficiente
    // O método 'normalize' com 'NFD' separa o caractere da sua acentuação,
    // e o regex remove apenas a acentuação (caracteres no range U+0300 a U+036f).
    normalizedText = normalizedText.normalize('NFD').replace(/[\u0300-\u036f]/g, '');

    // Etapa 3: Remover pontuação comum
    normalizedText = normalizedText.replace(/[.,\/#!$%\^&\*;:{}=\-_`~()\[\]?]/g, '');

    // Etapa 4: Remover "Stop Words"
    // Usar um Set é muito mais performático para verificar a existência de uma palavra
    // do que um Array com .includes()
    const words = normalizedText.split(/\s+/); // Divide por um ou mais espaços
    const filteredWords = words.filter((word) => !stopWordsSet.has(word) && word.length > 0);
    normalizedText = filteredWords.join(' ');

    // Etapa 5: Limpar espaços em branco múltiplos e remover espaços no início/fim
    normalizedText = normalizedText.replace(/\s+/g, ' ').trim();

    return normalizedText;
};
