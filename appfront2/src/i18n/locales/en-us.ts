export const enUs = {
  translations: {
    navigationSideBar: {
      homeMenuItem: 'Home',
      dashboardMenuItem: 'Dashboard',
      entitiesMenuItem: 'Entities',
      liveAgentMenuItem: 'Attendances',
      integrationsMenuItem: 'Integrations',
      settingsMenuItem: 'Settings',
      trainerBotMenuItem: 'Treinador de bots',
      customersMenuItem: 'Customers',
      campaignsMenuItem: 'Campaigns',
      helpCenterMenuItem: 'Help center',
      workspaceChanger: 'Change workspace',
      profileMenuItem: 'Profile',
      changeWorkspace: {
        changeWorkspaceMenuItem: 'Change workspace',
        searchInputPlaceholder: 'Search',
        notFoundMessage: `We didn't find any results, please try again.`,
      },
    },

    components: {
      enhancedTable: {
        showTotalSingularMessage: `item`,
        showTotalPluralMessage: `items`,
        columnSettingsModal: {
          modalTitle: `Configure list view`,
          saveButton: `Save changes`,
          cancelButton: `Cancel`,
        },
      },
    },

    dashboard: {
      sidebarMenu: {
        dashboardMenuGroup: 'Dashboard',
        sendingsMenuGroup: 'Sendings',
        realTimeMenuItem: 'Real time',
        graphicsMenuItem: 'My reports',
        conversationsMenuItem: 'Attendances',
        messagesMenuItem: 'Messages',
        agentsMenuItem: 'Agents',
        ratingsMenuItem: 'Ratings',
        appointmentsMenuItem: 'Appointments',
        fallbacksMenuItem: 'Fallbacks',
        sendingListMenuItem: 'Automatic sendings',
        categorizationDashboardMenuItem: 'Outcomes',
      },

      sendingList: {
        components: {
          cancelingReasonList: {
            resetButton: 'Reset canceling reasons',
            searchInputPlaceholder: 'Enter at least 3 characters to search',
            titleCancelingReason: 'Cancellation Reasons',
          },
        },
        dashboard: {
          pageTitle: `General receipt data`,
          chartListTitle: `Scheduling date`,
          rangeDatePickerStartDatePlaceholder: `Start date`,
          rangeDatePickerEndDatePlaceholder: `End date`,
          questionLink: `How to see the data`,
          confirmationsChartTitle: `Total confirmations`,
          npsChartTitle: `Total satisfaction survey (Link)`,
          npsScoreChartTitle: `Total NPS`,
          recoverLostScheduleChartTitle: `Total Appointment Rescues`,
          scheduleNotificationChartTitle: `Total Appointment Notifications`,
          remindersChartTitle: `Total Reminders`,
          medicalReportChartTitle: `Total medical reports`,
          statusEmpty: `Sent`,
        },
        fullTable: {
          pageTitle: `Service list`,
          tooltipHideCharts: 'Hide charts',
          tooltipViewCharts: 'View charts',
          backToDashboardButton: `Back to dashboard`,
          goToDetailsButton: `Go to details`,
          configureListButton: `Configure list`,
          allSelectOption: `All`,
          confirmationsSelectOption: `Confirmations`,
          npsSelectOption: `NPS`,
          remindersSelectOption: `Reminders`,
          medicalReportSelectOption: `Medical reports`,
          rangeDatePickerStartDatePlaceholder: `Start date`,
          rangeDatePickerEndDatePlaceholder: `End date`,
          searchInputPlaceholder: `Search in list`,
          filterButton: `Filter`,
          idColumn: `ID`,
          patientCodeColumn: `Patient Code`,
          patientNameColumn: `Patient`,
          doctorNameColumn: `Doctor`,
          scheduleDateColumn: `Schedule`,
          statusColumn: `Status`,
          statusEmpty: `Sent`,
          typeColumn: `Type`,
          noWorkspaceServiceLinkError: `Item with no workspace`,
          noConversationIdServiceLinkError: `Item with no conversationId`,
          goToConversationPopoverMenu: `Go to conversation`,
          servicePreviewButton: `View`,
          tableTotalSingularMessage: `registered service`,
          tableTotalPluralMessage: `registered services`,
          organizationUnitName: `Unit`,
          insuranceName: `Insurance`,
          insurancePlanName: `Insurance plan`,
          appointmentTypeName: `Appointment type`,
          procedureName: `Procedure`,
          unitCategory: `Unit`,
          cancelingReasonColumn: 'Canceling reason',
          npsScore: 'NPS Score',
          filtersModal: {
            modalTitle: `Filter by:`,
            specialityGroupTitle: `Speciality`,
            specialitySearchInputPlaceholder: `Enter at least 3 characters to search`,
            specialityResetButton: `Reset specialities`,
            doctorGroupTitle: `Doctors`,
            doctorSearchInputPlaceholder: `Enter at least 3 characters to search`,
            doctorResetButton: `Reset doctors`,
            statusGroupTitle: `Status`,
            npsScoreTitle: `NPS score`,
            confirmedStatus: `Confirmed`,
            openCsvStatus: `Has open service`,
            rescheduledStatus: `Rescheduled`,
            sentStatus: `Sent`,
            notAnsweredStatus: `Not answered`,
            canceledStatus: `Canceled`,
            invalidNumberStatus: `Invalid`,
            statusResetButton: `Reset status`,
            npsResetButton: `Reset NPS`,
            resetFiltersButton: `Reset`,
            cancelButton: `Cancel`,
            filterButton: `Filter`,
            procedureName: `Procedure`,
            procedureNameSearchInputPlaceholder: `Enter at least 3 characters to search`,
            procedureNameResetButton: `Clear procedures`,
            insuranceName: `Insurance`,
            insuranceNameSearchInputPlaceholder: `Enter at least 3 characters to search`,
            insuranceNameResetButton: `Clear insurance`,
            insurancePlanName: `Insurance plan`,
            insurancePlanNameSearchInputPlaceholder: `Enter at least 3 characters to search`,
            insurancePlanNameResetButton: `Clear Insurance Plan`,
            unitCategory: `Unit`,
            unitCategorySearchInputPlaceholder: `Enter at least 3 characters to search`,
            unitCategoryResetButton: `Clear unit`,
            cancelingReasonGroupTitle: `Canceling Reason`,
            titleSpecialityList: 'List of Specialties',
            titleInsuranceNameList: 'List of Insurance',
            titleInsurancePlanNameList: 'List of Insurance Plans',
            titleUnitCategoryList: 'List of Units',
            titleProcedureList: 'List of Procedures',
            titleDoctorList: 'List of Doctors',
            titleStatusList: 'List of Status',
            titleNpsList: 'List of NPS',
          },
        },
        npsProfileChart: {
          nameDetractor: 'Detractors (Score 0 to 6)',
          namePromoter: 'Promoters (Score 9 and 10)',
          namePassive: 'Passives (Score 7 and 8)',
          percentage: 'Percentage',
          chartTitle: 'Patient Profile',
          emptyChartText: 'You do not have any information in the list',
        },
        npsScoreChart: {
          chartTitle: 'NPS Score',
          legendTextBad: 'Bad (-100 to -1)',
          legendTextReasonable: 'Fair (0 to 49)',
          legendTextVeryGood: 'Very Good (50 to 74)',
          legendTextExcellent: 'Excellent (75 to 100)',
          emptyChartText: 'You do not have any information in the list',
        },
        pieChart: {
          confirmedLegend: `Confirmed`,
          canceledLegend: `Canceled`,
          invalidNumberLegend: `Invalid number`,
          sentLegend: `Sent`,
          notAnswered: `Not answered`,
          percentageText: `Percentage`,
          seeMoreButton: `See more`,
          emptyChartMessage: `You have no data in the list`,
          reshceduleLegend: `Rescheduled`,
          openCvsLegend: `Has open service`,
        },
        chartContainer: {
          titleMedicalReport: 'Medical Reports',
          titleNps: 'Satisfaction Survey (Link)',
          titleRecoverLostSchedule: 'Recovery of Missed Appointments',
          titleReminder: 'Reminders',
          titleScheduleNotification: 'Appointment Notifications',
          titleAllAppointments: 'All Appointments',
        },
        confirmationCharts: {
          titleConfirmations: 'Confirmations',
          titleCancelingReason: 'Cancellation Reasons',
        },
        npsScoreCharts: {
          titleNpsChart: 'NPS',
        },
        constants: {
          sendingType: {
            confirmation: `Confirmation`,
            reminder: `Reminder`,
            nps: `Net promoter score`,
            medicalReport: `Medical report`,
          },
          sendingStatus: {
            confirmed: `Confirmed`,
            sent: `Sent`,
            canceled: `Canceled`,
            invalidNumber: `Invalid number`,
            notAnswered: `Not answered`,
            openedConversation: `Has open service`,
            rescheduled: `rescheduled`,
          },
        },
      },

      categorizationDashboard: {
        components: {
          filtersModal: {
            modalTitle: 'Filters',
            labelAgent: 'Agents',
            placeholderAgent: 'Select agents',
            labelTimes: 'Teams',
            placeholderTimes: 'Select teams',
            labelObjective: 'Objective',
            placeholderObjective: 'Select objectives',
            tagInactive: 'Inactive',
            labelOutcome: 'Outcome',
            placeholderOutcome: 'Select outcomes',
            buttonClean: 'Clear',
            okTextFilter: 'Filter',
            cancelText: 'Close',
            labelTags: 'Tags',
            placeholderTags: 'Select tags',
          },
          tagsViewer: {
            tagSpan: 'This outcome has no tags',
            titleTags: 'Tags',
            popoverSpan: 'View tags',
          },
        },
        hooks: {
          useCategorizationCsv: {
            downloadingCategorizationError: 'Error downloading file',
          },
          useConversationCategorizations: {
            reloadOutcomeError: 'Error loading outcomes',
          },
          useConversationObjectives: {
            createObjectivesError: 'Error loading objectives',
          },
          useConversationOutcomes: {
            reloadOutcomeError: 'Error loading outcomes',
          },
          useTags: {
            notifyErrorMessage: 'Error',
            notifyErrorDescription: 'Error loading tags',
          },
        },
        pages: {
          categorizationList: {
            labelLink: 'Go to conversation',
            columnTitleId: 'Id',
            columnTitleAgent: 'Agent',
            columnTitleObjective: 'Objective',
            columnTitleOutcome: 'Outcome',
            columnTitleTags: 'Tags',
            columnTitleDescription: 'Description',
            columnTitleDate: 'Date',
            buttonViewConversation: 'View conversation',
            PageTemplateTitle: 'Conversation categorization',
            spanPeriodFilter: 'Filter by period:',
            placeholderDateStar: 'Start date',
            placeholderDateEnd: 'End date',
            buttonDownload: 'Download',
            inputPlaceholder: 'Search in description',
            buttonFilter: 'Filters',
            paginationSingShowTotal: 'outcome',
            paginationPluralShowTotal: 'outcomes',
          },
        },
      },
    },

    settings: {
      sidebarMenu: {
        configurationMenuGroup: 'Configurations',
        usersMenuItem: 'Users',
        templatesMenuItem: 'Templates',
        teamsMenuItem: 'Teams',
        tagsMenuItem: 'Hang tags',
        accessGroupMenuItem: 'Access groups',
        billingSpecificationMenuItem: 'Billing specifications',
        generalSettingsMenuItem: 'General settings',
        automaticallyAssignMenuItem: 'Auto assigns',
        privacyPolicyMenuItem: 'Privacity policy',
        ratingMenuItem: 'Rating',
        billingsMenuItem: 'Billings',
        featureFlagsMenuItem: 'Features',
        categorizationMenuItem: 'Categorization',
      },
      users: {
        userList: {
          amountContractedInThePlan: 'amount contracted in the plan.',
          add: 'Add',
          importSeveral: 'Import several',
          pageTitle: 'Users',
          nameColumn: 'Name',
          and: 'and',
          items: 'items',
          emailColumn: 'Email',
          typeColumn: 'Type',
          situationColumn: 'Situation',
          agent: 'Agent',
          admin: 'Admin',
          active: 'Active',
          actives: 'Actives',
          inactive: 'Inactive',
          inactives: 'Inactives',
          copyPasswordUpdateLink: 'Copy password update link.',
          daysUntilExpiration: 'days until expiration',
          expiredPassword: 'Expired Password',
          linkCopied: 'Link copied to your clipboard.',
          sendLinkToChangePassword: 'Send the link to the contact to change the password.',
          userManagement: 'User List',
          registeredUsers: 'Registered users',
          contractedPlans: 'contracted plans',
          allUsers: 'All users',
          searchUsers: 'Search users',
          passwordExpiringSoon: 'Password nearing expiration',
          passwordChangeEvery60Days:
            "Every 60 days your password is changed for security. If you don't remember your previous password, request a link from the admin to change the password.",
          enterName: 'Enter a Name',
          enterCurrentPassword: 'Current password',
          enterNewPassword: 'New password',
          repeatNewPassword: 'Repeat the new password',
          requiredField: 'Required field',
          min8Characters: 'At least 8 characters',
          max20Characters: 'Maximum of 20 characters',
          atLeast1SpecialCharacter: 'Your password must contain at least 1 special character',
          passwordsDoNotMatch: 'Passwords do not match',
          enterYourPassword: 'Enter your password',

          userCreateMultiple: {
            success: 'Success',
            successImportSeveral: 'Import completed successfully, the users have been registered.',
            import: 'Import',
            back: 'Back',
            downloadModel: 'Download Model',
            selectFileUp: 'Select a file up to 1 MB!',
            fileFormatWarning: 'Files must be in xlsx or csv format for registration',
            importFromFile: 'Import from a file',
          },

          userFilter: {
            allUsers: 'All Users',
            active: 'Active',
            inactive: 'Inactive',
            searchUsers: 'Search users',
          },
        },

        userManager: {
          ActiveUsers: 'Active Users',
          contractedQuantity: 'Contracted Quantity',
          userLimitExceeded:
            'Contracted plan user limit reached! New users will be charged on the next invoice.',
          errorWhitespaceName: 'The name cannot contain only whitespace.',
          placeholderName: 'Enter a name',
          placeholderEmail: 'Enter an email',
          placeholderPermission: 'Select a permission',
          placeholderPassword: 'Enter a password',
          errorRepitedEmail: 'User already exists. Please enter another email.',
          addUserSuccess: 'User successfully added',
          success: 'Success',
          cancel: 'Cancel',
          save: 'Save',
          back: 'Back',
          name: 'Name',
          profile: 'Profile',
          email: 'Email',
          permission: 'Permission',
          addUser: 'Add users',
          enterName: 'Enter the name!',
          enterEmail: 'Enter the email!',
          enterEmailValid: 'Enter a valid email!',
          enterPermission: 'Select the permission!',
          admin: 'Admin',
          agent: 'Agent',
          inactive: 'Inactive',
          selectPermission: 'Select a Permission',
          change: 'Change',
          passwordChangeEvery60Days:
            "Every 60 days your password is changed for security. If you don't remember your previous password, request a link from the admin to change the password.",
          newPassword: 'New password',
          enterNewPassword: 'Enter the password!',
          passwordMinLength: 'The password must be at least 8 characters',
          passwordMaxLength: 'The password must be at most 20 characters',
          passwordSpecialCharacters: 'The password must contain special characters',
          repeatPassword: 'Repeat the password',
          placeholderRepeatPassword: 'Repeat the password!',
          passwordsDoNotMatch: 'Passwords do not match',
          enterPassword: 'Enter a password',
        },

        userUpdater: {
          errorWhitespaceName: 'The name cannot contain only whitespace.',
          back: 'Back',
          save: 'Save',
          profile: 'Profile',
          enterPermission: 'Select the permission!',
          permission: 'Permission',
          subRoles: 'Sub permissions',
          enterEmail: 'Enter the email!',
          enterName: 'Enter the name!',
          email: 'Email',
          name: 'Name',
          cancel: 'Cancel',
          editUser: 'Edit users',
          changePassword: 'Change password',
          admin: 'Admin',
          agent: 'Agent',
          inactive: 'Inactive',
          dashboard_admin: 'Permission to view Dashboards',
          selectPermission: 'Select a Permission',

          userUpdatePassword: {
            success: 'Success',
            successUpdatePassword: 'Password updated successfully',
            back: 'Back',
            save: 'Save',
            change: 'Change',
            cancel: 'Cancel',
            passwordChangeEvery60Days: 'Every 60 days the password is changed for security.',
            passwordPlaceholder: 'Enter the password',
            passwordMinLength: 'The password must be at least 8 characters',
            passwordMaxLength: 'The password must be at most 20 characters',
            passwordSpecialCharacters: 'The password must contain special characters',
            confirmPassword: 'Repeat the password',
            confirmPasswordPrompt: 'Repeat the password',
            passwordsDoNotMatch: 'Passwords do not match',
            newPassword: 'Password',
            enterPassword: 'Enter a password',
            repeatPassword: 'Repeat the password',
            currentPassword: 'Current password',
            currentPasswordValidation: 'Enter the current password',
            passwordExpiryWarning: 'Password nearing expiration',
            passwordExpiredMessage: 'Password expired',
            passwordExpiryIn: 'Password expires in',
          },
        },
      },
      teams: {
        pages: {
          teamList: {
            pageHeader: 'Teams',
            addTeamButton: 'Add Team',
            pageTitle: 'Team List',
            searchInputPlaceholder: 'Search in the list',
            refreshButton: 'Refresh',
            tableTitle: 'Team Name',
            noUserMessage: 'No users',
            viewTeamButton: 'View more',
            totalUserTable: 'registered team',
            totalUsersTable: 'registered teams',
            inactiveTag: 'Inactive',
          },
          createNewTeamPage: {
            buttonBack: 'Back to team list',
            buttonSave: 'Save',
          },
          teamViewPage: {
            backToTeamList: 'Back to team list',
            save: 'Save',
            successMessage: 'The team has been updated!',
            successTitle: 'Success',
            inactivateButton: 'Inactivate',
            inactiveTeamAlert: 'This team is inactive',
            reactivateButton: 'Reactivate',
            inactivatedTooltip: 'Navigate to article',
          },
        },
        components: {
          teamTable: {
            nameCard: 'Name',
            users: 'Users',
            searchPlaceholder: 'Search in the list',
            deleteSelectedUsersConfirm: 'Do you want to delete the selected users?',
            delete: 'Delete',
            no: 'No',
            deleteSelected: 'Delete selected',
            batchAddPermissions: 'Batch add permissions',
            addUser: 'Add user',
            editPermissions: 'Edit Permissions',
            deleteUserConfirm: 'Do you want to delete the user?',
            supervisor: 'Supervisor',
            onePermission: '1 permission',
            multiplePermissions: '{count} permissions',
            onePermissionSingular: '{count} permission',
          },
          addUserToTable: {
            addUser: 'Add user',
            nameCard: 'Name',
            editPermissions: 'Edit Permissions',
            supervisor: 'Supervisor',
            onePermission: '1 permission',
            multiplePermissions: '{count} permissions',
            searchPlaceholder: 'Search user',
            availableUsersTitle: 'Available users to add to the team',
            close: 'Close',
            addUserWithPermissions: 'Add users with permissions',
          },
          addUserModal: {
            close: 'Close',
            noAvailableUsers: 'No available users',
            noAvailableUsersDescription:
              'You have no available users to add or you have already added all.',
          },
          addUserPermission: {
            editingPermissions: 'Editing user permissions',
            addingPermissions: 'Adding permission for {count} user(s)',
            back: 'Back',
            addUsersWithSelectedPermissions: 'Add users with selected permissions',
            addPermissionForSelectedUser: 'Add permission for the selected user',
            addPermissions: 'Add permissions',
          },
          copyDayOffPopover: {
            title: 'Copy period to teams:',
            successMessage: {
              message: 'Success',
              description: 'Period cloned to selected teams!',
            },
            close: 'Close',
            copy: 'Copy',
          },
          copyPeriodPopover: {
            title: 'Copy date to',
            close: 'Close',
            copy: 'Copy',
            copyTime: 'Copy time',
            days: {
              sun: 'Sunday',
              mon: 'Monday',
              tue: 'Tuesday',
              wed: 'Wednesday',
              thu: 'Thursday',
              fri: 'Friday',
              sat: 'Saturday',
            },
          },
          dayOffModal: {
            title: 'Add new holiday or period',
            save: 'Save',
            close: 'Close',
            requiredFieldMessage: 'Required field',
            fields: {
              name: {
                label: 'Name',
              },
              period: {
                label: 'Period',
                placeholderStart: 'Start date',
                placeholderEnd: 'End date',
              },
              message: {
                label: 'Message',
              },
              cannotAssignEndConversation: 'End conversation when within the period',
            },
          },
          dayOffTable: {
            name: 'Name',
            period: 'Period',
            copy: 'Copy',
            edit: 'Edit',
            delete: 'Delete',
            confirmDeleteTitle: 'Do you want to delete the period?',
            confirmDeleteOk: 'Delete',
            confirmDeleteCancel: 'No',
            addPeriod: 'Add period',
            title: 'Holidays or periods',
          },
          editPermissionModal: {
            title: 'Edit permissions',
            close: 'Close',
            addPermissions: 'Add permissions',
            addingPermissions: 'Adding permission for ',
            addingPermissionsUsers: 'users',
            editingPermissions: 'Editing user permissions',
          },
          periodTimePicker: {
            addPeriod: 'Add time',
            removePeriod: 'Remove time',
            closed: 'Closed',
          },
          permissionList: {
            supervisor: 'Supervisor (All permissions enabled)',
            viewAttendances: 'View attendances',
            startAttendances: 'Start attendances',
            viewFinishedAttendances: 'View finished attendances by other team members',
            viewOpenTeamConversations: 'View open team conversations by other team members',
            viewConversationContent: 'View conversation messages not assumed',
            transferConversations: 'Transfer conversations to other teams',
            sendAudioMessage: 'Record and send audio messages',
            sendOfficialTemplate: 'Send official template',
            sendMultipleMessages: 'Allow batch sending of conversations',
            viewHistoricConversation: 'View only history of conversations for this team',
          },
          servicePeriods: {
            title: 'Service',
            workingHoursTitle: 'Working hours',
            sunday: 'Sunday',
            monday: 'Monday',
            tuesday: 'Tuesday',
            wednesday: 'Wednesday',
            thursday: 'Thursday',
            friday: 'Friday',
            saturday: 'Saturday',
            alertMessagesTitle: 'Alert messages',
            assignMessageLabel: {
              text: 'When a conversation is transferred to the team, the message defined below will be automatically sent in the conversation',
              tooltip: 'Message to be sent when transferred to the team during this period',
            },
            cannotAssignMessageLabel: {
              text: 'When a conversation is transferred to the team, if it is outside working hours, the message defined below will be automatically sent in the conversation',
              tooltip: 'Message to be sent when transferred to the team during this period',
            },
            endConversationCheckbox: 'End conversation when closing time',
            placeholder: 'Type here',
          },
          teamInfo: {
            nameCard: 'Team',
            labelTeam: 'Team Name',
            labelPriority: 'Priority',
            tooltipPriority:
              'Prioritizes the team in the list of conversations compared to other teams',
            labelReassignService: 'Reassign service period',
            neverAllowOption: 'Never Allow',
            oneMinuteOption: '1 minute',
            twoMinutesOption: '2 minutes',
            threeMinutesOption: '3 minutes',
            fiveMinutesOption: '5 minutes',
            tenMinutesOption: '10 minutes',
            fifteenMinutesOption: '15 minutes',
            thirtyMinutesOption: '30 minutes',
            oneHourOption: '1 hour',
            twoHoursOption: '2 hours',
            fiveHoursOption: '5 hours',
            tenHoursOption: '10 hours',
            twentyHoursOption: '20 hours',
            oneDayOption: '1 day',
            twoDaysOption: '2 days',
            threeDaysOption: '3 days',
            notificationNewAttendance: 'Show notification for new attendance',
            canReceiveTransfer: 'Allow transfers to this team',
            viewPublicDashboard: 'View team on public report',
            categorizationRequired: 'Require service categorization',
            categorizationTooltip:
              'When activate this option, all users from this teams will have to fill the objectives and outcomes when end a service',
            navigateToArticle: 'Navigate to the article',
            requiredFieldMessage: 'Required field',
          },
          inactivateTeamModal: {
            title: 'Inactivating team',
            okButton: 'I want inactivate this team',
            cancelButton: 'Back',
            description: {
              descriptionAlert:
                'Attention: any support cases transferred to this team will be lost.',
              descriptionSpan:
                'To avoid impacting service, before deactivating the team, check with our support team that there is no automatic service transfer by the bot. When you deactivate the team, the data for that team will continue to be displayed in the information and graphs. For more information, visit our',
              descriptionArticle: 'article.',
            },

            errorNotificationMessage: 'Error when inactivating team',
            successNotificationMessage: 'The team was inactivated ',
            successNotificationDescription: 'Success',
            tooltipMessage: 'Navigate to article',
          },
          reactivateTeamModal: {
            title: 'Reactivating team',
            okButton: 'I want reactivate this team',
            cancelButton: 'Back',
            description:
              'When reactivating a team, it will be able to receive new services and to have its data edited again.',
            errorNotificationMessage: 'Error when reactivating team',
            successNotificationMessage: 'The team was reactivated ',
            successNotificationDescription: 'Success',
            tooltipMessage: 'Navigate to article',
          },
        },
      },
      categorization: {
        components: {
          editableTable: {
            editableCell: {
              tooltipTitle: 'Invalid characters',
              rulesMessage: 'Required field',
              hasOnlyWhitespaces: 'Invalid characters',
            },
            editableTable: {
              messageWarning: 'Warning',
              descriptionWarning:
                'To keep the functionality active, at least one Objective and one Outcome must be created.',
              columnsID: 'ID',
              columnsName: 'Name',
              confirmButton: 'Confirm edit',
              editButton: 'Edit objective',
              popConfirmTitleReactivate: 'Are you sure you want to reactivate this item?',
              okTextReactivate: 'Reactivate',
              cancelText: 'Cancel',
              activateObjective: 'Activate objective',
              popConfirmTitleDeactivate: 'Are you sure you want to deactivate this item?',
              okTextDisable: 'Deactivate',
              tooltipTitleDeactivate: 'Deactivate objective',
            },
          },
          objectiveTab: {
            objectiveTitle: 'Include an objective',
            tooltipTitleArticle: 'Navigate to the article',
            spanMessageExplanation:
              'Categorizing the service objective helps identify why the patient reached out, organizing services according to their needs.',
            spanMessageExpExample:
              'For example, if the patient was seeking to clarify doubts about their appointment, their objective would be categorized as "Appointment doubts."',
            labelName: 'Name',
            rulesMessage: 'Required field',
            hasOnlyWhitespaces: 'Invalid characters',
            buttonAddNewObjective: 'Add new objective',
            requiredFieldTitle: 'How to make filling out mandatory?',
            spanMessageRequiredFiel:
              'If you want to make this field mandatory, enable the "Mandatory service categorization" checkbox in the team settings.',
            spanMessageRequiredActivation:
              'When this option is enabled, all agents on this team will be required to fill out objectives and outcomes when closing a service.',
          },
          objetiveTable: {
            objectiveTableTitle: 'Objectives',
            messageWarning: 'Warning',
            descriptionWarning:
              'To keep the functionality active, at least one Objective and one Outcome must be created.',
            messageSuccess: 'Success',
            descriptionSuccess: 'The selected objectives have been removed.',
            notifyEditObjective: 'The objective has been edited.',
            notifyRemoveObjective: 'The objective has been removed.',
            notifyRestoreObjective: 'The objective has been reactivated.',
            searchInput: 'Search in the list',
            popConfirmTitle: 'Are you sure you want to deactivate the selected items?',
            okTextDisable: 'Deactivate',
            cancelText: 'Cancel',
            buttonDisable: 'Deactivate selected',
          },
          outcomeTab: {
            notifySuccessOutcome: 'New outcome added',
            messageSuccess: 'Success',
            outcomeTitle: 'Add an outcome',
            tooltipTitleArticle: 'Navigate to the article',
            spanMessageExplanationOutcome:
              'Outcome categorization provides a clear and quick view of the final result of the service, eliminating the need to review each service individually.',
            spanMessageExpExampleOutcome: 'An example category would be "Appointment Made."',
            labelName: 'Name',
            rulesMessage: 'Required field',
            hasOnlyWhitespaces: 'Invalid characters',
            buttonAddNewOutcome: 'Add new outcome',
            requiredFieldTitle: 'How to make filling out mandatory?',
            spanMessageRequiredFiel:
              'If you want to make this field mandatory, enable the "Mandatory service categorization" checkbox in the team settings.',
            spanMessageRequiredActivation:
              'When this option is enabled, all agents on this team will be required to fill out objectives and outcomes when closing a service.',
          },
          outcomeTable: {
            outcomeTableTitle: 'Outcomes',
            messageWarning: 'Warning',
            descriptionWarning:
              'To keep the functionality active, at least one Objective and one Outcome must be created.',
            notifyRemoveOutcome: 'The selected outcomes have been removed.',
            messageSuccess: 'Success',
            notifyEditOutcome: 'The outcome has been edited.',
            descriptionRemoveOutcome: 'The outcome has been removed.',
            notifyRestoreOutcome: 'The outcome has been reactivated.',
            searchInput: 'Search in the list',
            popConfirmTitle: 'Are you sure you want to deactivate the selected items?',
            okTextDisable: 'Deactivate',
            cancelText: 'Cancel',
            buttonDisable: 'Deactivate selected',
          },
        },
        hooks: {
          useConversationObjectives: {
            reloadObjectivesError: 'Error loading objectives',
          },
          useConversationOutcomes: {
            reloadOutcomeError: 'Error loading outcomes',
          },
          useCreateConversationObjective: {
            notifyErrorObjective: 'This objective already exists.',
            notifyErrorCreate: 'Error creating objective',
          },
          useCreateConversationOutcome: {
            notifyErrorOutcome: 'This outcome already exists.',
            notifyErrorCreate: 'Error creating outcome',
          },
          useEditConversationObjective: {
            editConversationObjectiveError: 'Error editing objective',
          },
          useEditConversationOutcome: {
            editConversationOutcomeError: 'Error editing outcome',
          },
          useEnableCategorization: {
            notifyErrorCategorization:
              'You need to register at least 1 Objective and 1 Outcome to activate the functionality',
            createOutcomeError: 'Error creating outcome',
          },
          useRemoveConversationObjectives: {
            removeObjectivesError: 'Error removing objectives',
          },
          useRemoveConversationOutcomes: {
            notifyErrorRemove: 'Error removing outcome',
          },
          useRestoreConversationObjective: {
            notifyErrorRestore: 'Error restoring objective',
          },
          useRestoreConversationOutcome: {
            notifyErrorRestore: 'Error restoring outcome',
          },
        },
        pages: {
          categorizationList: {
            labelObjectives: 'Objectives',
            labelOutcomes: 'Outcomes',
            alertMessage: 'The functionality is inactive. Click the button next to activate it.',
            pageTitle: 'Categorization',
          },
        },
      },
    },

    campaign: {
      sidebarMenu: {
        campaignMenuGroup: 'Campaign',
        broadcastMenuItem: 'Broadcast list',
        customFlowMenuItem: 'Custom flow',
        activeMessageMenuGroup: 'Active message',
        activeMessageMenuItem: 'Active message',
        emailMenuGroup: 'Email',
        emailSendingConfigMenuItem: 'Email sending config',
        activeMessageStatusMenuItem: 'Active message status',
        automaticSendingsMenuGroup: 'Automatic sendings',
        configurationMenuItem: 'Settings',
        titleCancelingReason: 'Cancellation Reasons',
        runnersMenuItem: 'Runners',
      },
      broadcastList: {
        components: {
          broadcastInfoCard: {
            cardTitleSpanDataList: '1. List Data',
            tagFilled: 'Filled',
            tagWaiting: 'Waiting',
            labelListName: 'List Name',
            rulesMessage: 'Required field',
            rulesWhitespaces: 'Invalid characters',
            inputPlaceholder: 'Enter a name for your list',
          },
          contactAddModal: {
            columnSetupContainer: {
              modalTitle: 'You selected the same data in more than one column',
              modalContent: 'Do you want to proceed anyway?',
              modalOkText: 'Proceed',
              modalCancelText: 'Cancel',
              span: 'Match the .xlsx file columns with the template variable columns.',
              alertMessage:
                'Unfilled fields will be added to the table with a blank value. The data can be edited after being added.',
              columnTitle: 'Column "{{column}}"',
              selectPlaceholder: 'Select an option',
            },
            contactAddModal: {
              labelStaticColumnsFone: 'Phone',
              labelStaticColumnsName: 'Name',
              titleModalConfirmLimit:
                'The recipient limit is {maxContactCount}. Your list exceeds the available limit.',
              modalConfirmContent: 'Only the first data from the document will be inserted.',
              okTextContinue: 'Proceed',
              cancelText: 'Cancel',
              notifyErrorXlsxFile: 'No file imported',
              notifyErrorFile: 'The file was imported with errors',
              spanImportFile: 'Import a spreadsheet and/or download a template for import',
              spanImportFileConfig: 'Configure the columns',
              buttonCancel: 'Cancel',
              buttonImportData: 'Import data',
              buttonAddRecipients: 'Add recipients',
            },
            xlsxImportContainer: {
              alertMessage:
                'The spreadsheet must have the columns {{columns}} filled to load the broadcast list. We do not verify individual data, only inconsistencies in fields.',
              spanImport:
                'Import a template file with the data or an existing spreadsheet. Drag and drop here or import the spreadsheet with the data.',
              uploadDragger: 'Click or drag your spreadsheet to import it.',
              spanDownloadTemplate:
                'Or if you prefer, download our template and include your data, then import the file.',
              downloadModel: 'Download .xls template',
            },
          },
          contactTable: {
            contactTable: {
              titleStatusBroadcast: 'Status',
              tagSend: 'Sent',
              tagSubmissionFailed: 'Submission failed',
              titleColumnPhone: 'Phone',
              titleColumnName: 'Name',
              popConfirmDel: 'Are you sure you want to delete this contact?',
              okTextYes: 'Yes',
              cancelTextNo: 'No',
              tooltipTitleDel: 'Delete recipient',
              tooltipTitleConversation: 'Go to service',
              messageAlert: 'Attention',
              descriptionDuplicatePhone:
                'The numbers highlighted in red are repeated. Correct them so the list can be sent.',
              defaultSendingError: 'Unknown error',
            },
            editableCell: {
              titleDuplicatedPhone: 'Duplicated phone number',
              titleAttributeEmpty: 'The column needs to be filled',
            },
          },
          gridActionsColumn: {
            deleteTitle: 'Remove broadcast list',
            deleteAlertMessage: 'This action is irreversible',
            deleteSpanMessage: 'Are you sure you want to remove the broadcast list',
            deleteOkText: 'Remove',
            cancelText: 'Cancel',
            cloneTitle: 'Copy broadcast list',
            cloneAlertMessage:
              'A new list will be created with the same settings and recipients from this list.',
            cloneConfirmationSpan: 'Do you want to create a clone of this broadcast list?',
            confirmOkText: 'Confirm',
            buttonViewSendItems: 'View submissions',
            canDelete: 'Delete broadcast list',
            deleteWarning: 'You cannot delete a broadcast list that has already been sent',
          },
          schedulingCard: {
            notificationAttentionTitle: 'Attention',
            notificationWarningCustomFlow:
              'The custom flow is a specific transfer behavior after sending a message. To create a custom conversation flow, contact support. If you already have a custom flow, select it.',
            tooltipIsTest:
              'The test broadcast list is used to test the configurations made in the list. There is a charge, and the limit is 5 recipients.',
            cardTitleSpanConfigSend: '3. Sending configurations',
            tagFilled: 'Filled',
            tagWaiting: 'Waiting',
            placeholderDate: 'Select a date',
            invalidDate: 'Invalid date',
            forItemLabelSend: 'Immediate send',
            tooltipImmediateSend:
              'With this option selected, by clicking "save and send," the list will be sent immediately',
            forItemLabelCustomFlow: 'Custom flow',
            selectPlaceholderCustomFlow: 'Select a flow',
            checkboxLabelIsTest: 'Will this list be a test? (there is a charge)',
            notificationWarningIsTest:
              'The test broadcast list is used to test the configurations made in the list. There is a charge, and the limit is 5 recipients.',
          },
          tableCard: {
            addNewRowErrorMessage:
              'The recipient limit is {{maxContactCount}}. Your list exceeds the available limit.',
            importFileErrorMessage:
              'The recipient limit is {{maxContactCount}}. Your list exceeds the available limit.',
            removeRowConfirmPluralTitle:
              'Do you want to remove the {{selectedRowKeys}} selected recipients?',
            removeRowConfirmSingleTitle:
              'Do you want to remove the {{selectedRowKeys}} selected recipient?',
            removeRowConfirmContent: 'This action is irreversible',
            okTextRemove: 'Remove',
            cancelText: 'Cancel',
            labelFilterAllContacts: 'View all',
            labelFilterSentSuccessfully: 'Sent successfully',
            labelFilterSendingFailure: 'With sending failure',
            labelFilterNotFilled: 'Unfilled fields',
            actionInclude: 'Include',
            actionExclude: 'Exclude',
            actionImport: 'Import',
            cardTitleSpanRecipients: '4. Recipients',
            exportXlsxButton: 'Export as xlsx',
            searchInputPlaceholder: 'Search in the list',
            exportMessageRepeatedPhones:
              'The numbers highlighted in red are repeated. Correct them so the list can be sent.',
            contactTableMessageError:
              'All fields were filled. The system does not check whether the fields were correctly filled.',
            exportMessagePluralMissingFields:
              '{{errorCounter}} recipients with some field not filled, check before sending.',
            exportMessageSingleMissingField:
              '{{errorCounter}} recipient with some field not filled, check before sending.',
            recipientCountPluralMessage: 'recipients',
            recipientCountSingleMessage: 'recipient',
            availableCountPluralMessage: 'available',
            availableCountSingleMessage: 'available',
          },
          templateCard: {
            cardTitleSpanMessage: '2. Message and sending number',
            tagFilled: 'Filled',
            tagWaiting: 'Waiting',
            formItemLabelActiveMessage: 'Sending number',
            formItemRulesMessage: 'Required field',
            selectPlaceholderMessage: 'Select a number',
          },
          templateSelect: {
            modalInfoTitle: 'Message preview',
            labelForItemTemplate: 'Template',
            rulesMessageTemplate: 'Required field',
            placeholderMessageSettingId: 'Select an official template',
            placeholderMessageTemplate: 'Select a sending number',
            titleViewMessage: 'View message',
          },
        },
        hooks: {
          useActiveMessageList: {
            notifyError: 'Failed to load the active messages list',
          },
          useCampaignActionList: {
            notifyError: 'Failed to load the custom flows list',
          },
          useCampaignList: {
            notifyError: 'Failed to load the broadcast lists',
          },
          useChannelConfigList: {
            notifyError: 'Failed to load the channel list',
          },
          useCreateNewCampaign: {
            notifySuccessMessage: 'Success',
            notifySuccessDescription: 'Your broadcast list has been created, check the table.',
            notifyError: 'Failed to create a new campaign',
          },
          useDeleteCampaign: {
            notifyError: 'Failed to delete the broadcast list',
          },
          useGetCampaignById: {
            notifyError: 'Failed to load the broadcast list',
          },
          useOfficialTemplateList: {
            notifyError: 'Failed to load the templates list',
          },
          useUpdateCampaignById: {
            notifySuccessMessage: 'Success',
            notifySuccessDescription: 'Your broadcast list has been updated.',
            notifyError: 'Failed to update the broadcast list',
          },
        },
        pages: {
          broadcastGrid: {
            actionButtons: 'Create Broadcast List',
            pageTitle: 'Broadcast List',
            tooltipTitle: 'Navigate to the article',
            tableFilterAll: 'All',
            tableFilterDraft: 'Draft',
            tableFilterAwaitingSend: 'Awaiting Send',
            tableFilterFinishedComplete: 'Sent',
            tableFilterHasFail: 'Failed to Send',
            tableFilterIsTest: 'Test List',
            columnsTableName: 'Name',
            columnsTableStatus: 'Status',
            columnsTableSendAt: 'Send At',
            columnsTableSentTo: 'Sent To',
            columnsTableActions: 'Actions',
            columnsTableContactSummaryTotal: '{{contactsSentCount}} of {{contactCount}} recipients',
            statusTagSuccess: 'Successfully Sent',
            statusTagWaiting: 'Awaiting Send',
            statusTagPaused: 'Paused',
            statusTagDraft: 'Draft',
            statusTagSending: 'Sending',
            statusTagNotScheduled: 'Not Scheduled',
            statusTagFailed: 'Failed to Send',
            unsentContactsPlural:
              'There was an error sending the message to {{unsentCount}} recipients, use the link on the side if you want to resend to the failed contacts',
            unsentContactsSingular:
              'There was an error sending the message to {{unsentCount}} recipient, use the link on the side if you want to resend to the failed contact',
            modalConfirmTitle: 'Confirmation',
            modalConfirmAlertMessage:
              'A new list will be created with the same settings and recipients who failed to send.',
            modalConfirmSpanMessage:
              'Do you want to create a broadcast list for the contacts that encountered sending issues?',
            okText: 'OK',
            cancelText: 'Cancel',
            tableTitle: 'Lists',
            placeholderStartDate: 'Start Date',
            placeholderEndDate: 'End Date',
            placeholderSearchInput: 'Search in the list',
            buttonReload: 'Reload',
            paginationTotalSingular: 'registered list',
            paginationTotalPlural: 'registered lists',
          },
          createBroadcastList: {
            notifyErrorSurplus: 'Number of recipients exceeds the available limit',
            notifyErrorDuplicatedPhones:
              'There are duplicate numbers. Remove duplicate numbers before sending.',
            notifyErrorContactError:
              'Fill in the name and phone number of the recipients in the table',
            notifyErrorEmptyContact:
              'You cannot send this list without filling in the fields highlighted in red.',
            titleModalConfirm: 'Send Confirmation',
            messageAlertConfirm: 'The selected message will be sent to all contacts immediately.',
            messageSpanError:
              'If there is an error, you can create a new list with only those contacts to resend.',
            okTextConfirm: 'Confirm Send',
            titleAlert: 'Attention',
            spanHasEmptyContactAttributes:
              'The list has unfilled fields, making it impossible to send. Do you want to save as a draft and keep the empty fields or continue editing?',
            okTextSave: 'Save as draft',
            cancelTextEdit: 'Continue editing',
            contactsWithErrorResend: '- (Resend)',
            contactsWithErrorClone: '- (Clone)',
            pageTitleCloning: 'Cloning ',
            titleBroadcastList: 'Create Broadcast List',
            buttonGoBack: 'Go Back',
            buttonSaveSend: 'Save and Send',
            buttonSave: 'Save',
          },
          editBroadcastList: {
            notifyErrorSurplus: 'Number of recipients exceeds the available limit',
            notifyErrorDuplicatedPhones:
              'There are duplicate numbers. Remove duplicate numbers before sending.',
            notifyErrorContactError:
              'Fill in the name and phone number of the recipients in the table',
            notifyErrorEmptyContact:
              'You cannot send this list without filling in the fields highlighted in red.',
            titleModalConfirm: 'Send Confirmation',
            messageAlertConfirm: 'The selected message will be sent to all contacts immediately.',
            messageSpanError:
              'If there is an error, you can create a new list with only those contacts to resend.',
            okTextConfirm: 'Confirm Send',
            cancelText: 'Cancel',
            titleAlert: 'Attention',
            spanHasEmptyContactAttributes:
              'The list has unfilled fields, making it impossible to send. Do you want to save as a draft and keep the empty fields or continue editing?',
            okTextSave: 'Save as draft',
            cancelTextEdit: 'Continue editing',
            buttonGoBack: 'Go Back',
            buttonContactWithError: 'Create list with recipients who failed to send',
            buttonSaveSend: 'Save and Send',
            buttonSave: 'Save',
          },
        },
      },
    },
    trainerBot: {
      sidebarMenu: {
        configurationMenuGroup: `Bot Trainer`,
        trainingMenuItem: `Training`,
      },
      training: {
        pages: {
          viewTrainer: {
            contentLengthError: `Content must be less than 1000 characters`,
            successMessage: `Training updated successfully!`,
            errorMessage: `Error updating training.`,
            contentPlaceholder: `Enter your content here...`,
            identifierLabel: `Identifier`,
            contentLabel: `Content`,
            botIdLabel: `Bot ID`,
            requiredFieldMessage: `This field is required`,
            cardTitle: `Response Adjustment`,
            backToListButton: `Back to training list`,
            saveButton: `Save`,
            loadingTip: `Loading data...`,
            botSelectPlaceholder: `Select a bot`,
          },
          createTrainer: {
            createTrainingButton: `Create training`,
            backButton: `Back`,
            successMessage: `Training created successfully!`,
            errorMessage: `Error creating training.`,
            contentPlaceholder: `Enter your content here...`,
            contentLengthError: `Content must be less than 1000 characters`,
            identifierLabel: `Identifier`,
            contentLabel: `Content`,
            botIdLabel: `Bot ID`,
            requiredFieldMessage: `This field is required`,
            pageTitle: `Create New Training`,
            cardTitle: `Response Adjustment`,
            botSelectPlaceholder: `Select a bot`,
          },
          trainingList: {
            createTrainingButton: `Create Training`,
            confirmDeleteTitle: `Are you sure you want to deactivate this training?`,
            successDeleteMessage: `Training deactivated`,
            errorDeleteMessage: `Failed to deactivate the training`,
            botColumnTitle: `Bot`,
            identifierColumnTitle: `Identifier`,
            contentColumnTitle: `Content`,
            lastTrainingColumnTitle: `Last Training`,
            editOption: `Edit`,
            deactivateOption: `Inactivate`,
          },
        },
        components: {
          trainingButtons: {
            trainAll: `Train All`,
            trainingInProgress: `Training...`,
            allTrained: `All Trained`,
            confirmTrainingTitle: `Do you want to start training for all bots?`,
            successTrainingMessage: `Training completed for all bots!`,
            errorTrainingMessage: `Failed to start training. Please try again.`,
          },
        },
      },
    },
  },
};
